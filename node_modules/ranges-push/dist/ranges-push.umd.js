/**
 * ranges-push
 * Gather string index ranges
 * Version: 5.0.3
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/ranges-push/
 */

!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).rangesPush={})}(this,(function(e){"use strict";function r(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function t(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function n(e){for(var n=1;n<arguments.length;n++){var s=null!=arguments[n]?arguments[n]:{};n%2?t(Object(s),!0).forEach((function(t){r(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):t(Object(s)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(s,r))}))}return e}function s(e,r){void 0===r&&(r=1);function t(e){return Array.from(e).reverse().join("")}function n(e,r,t){var n=t?"\n":"\r",s=t?"\r":"\n";if(!e)return e;for(var i=0,o="",a=0,u=e.length;a<u;a++)(e[a]===n||e[a]===s&&e[a-1]!==n)&&i++,"\r\n".includes(e[a])||" "===e[a]?" "===e[a]?o+=e[a]:e[a]===n?i<=r&&(o+=e[a],e[a+1]===s&&(o+=e[a+1],a++)):e[a]===s&&(!e[a-1]||e[a-1]!==n)&&i<=r&&(o+=e[a]):e[a+1]||i||(o+=" ");return o}if("string"==typeof e&&e.length){var s=1;"number"==typeof+r&&Number.isInteger(+r)&&+r>=0&&(s=+r);var i="",o="";if(e.trim()){if(!e[0].trim())for(var a=0,u=e.length;a<u;a++)if(e[a].trim()){i=e.slice(0,a);break}}else i=e;if(e.trim()&&(""===e.slice(-1).trim()||" "===e.slice(-1)))for(var g=e.length;g--;)if(e[g].trim()){o=e.slice(g+1);break}return""+n(i,s,!1)+e.trim()+t(n(t(o),s,!0))}return e}var i={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function o(e,r){if(!Array.isArray(e)||!e.length)return e;var t,s,o=n(n({},i),r);if(o.strictlyTwoElementsInRangeArrays&&!e.filter((function(e){return e})).every((function(e,r){return 2===e.length||(t=r,s=e.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, "+t+"th range ("+JSON.stringify(e[t],null,4)+") has not two but "+s+" elements!");if(!e.filter((function(e){return e})).every((function(e,r){return!(!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(t=r,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, "+t+"th range ("+JSON.stringify(e[t],null,4)+") does not consist of only natural numbers!");var a=Math.pow(e.filter((function(e){return e})).length,2),u=0;return Array.from(e).filter((function(e){return e})).sort((function(e,r){return o.progressFn&&o.progressFn(Math.floor(100*(u+=1)/a)),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1}))}var a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function u(e){return null!=e}function g(e){return Number.isInteger(e)&&e>=0}function l(e){return"string"==typeof e}var f={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1};e.Ranges=function(){function e(e){var r=n(n({},f),e);if(r.mergeType&&1!==r.mergeType&&2!==r.mergeType)if(l(r.mergeType)&&"1"===r.mergeType.trim())r.mergeType=1;else{if(!l(r.mergeType)||"2"!==r.mergeType.trim())throw new Error('ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'+typeof r.mergeType+'", equal to '+JSON.stringify(r.mergeType,null,4));r.mergeType=2}this.opts=r,this.ranges=[]}var r=e.prototype;return r.add=function(e,r,t){var n=this;if(null!=e||null!=r){if(u(e)&&!u(r)){if(Array.isArray(e)){if(e.length){if(e.some((function(e){return Array.isArray(e)})))return void e.forEach((function(e){Array.isArray(e)&&n.add.apply(n,e)}));e.length&&g(+e[0])&&g(+e[1])&&this.add.apply(this,e)}return}throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set ('+JSON.stringify(e,null,0)+') but second-one, "to" is not ('+JSON.stringify(r,null,0)+")")}if(!u(e)&&u(r))throw new TypeError('ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set ('+JSON.stringify(r,null,0)+') but first-one, "from" is not ('+JSON.stringify(e,null,0)+")");var i=+e,o=+r;if(g(t)&&(t=String(t)),!g(i)||!g(o))throw g(i)&&i>=0?new TypeError('ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it\'s of a type "'+typeof o+'" equal to: '+JSON.stringify(o,null,4)):new TypeError('ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it\'s of a type "'+typeof i+'" equal to: '+JSON.stringify(i,null,4));if(u(t)&&!l(t)&&!g(t))throw new TypeError("ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but "+typeof t+", equal to:\n"+JSON.stringify(t,null,4));if(u(this.ranges)&&Array.isArray(this.last())&&i===this.last()[1]){if(this.last()[1]=o,this.last(),null!==this.last()[2]&&u(t)){var a=!(this.last()[2]&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?t:this.last()[2]+t;this.opts.limitToBeAddedWhitespace&&(a=s(a,this.opts.limitLinebreaksCount)),l(a)&&!a.length||(this.last()[2]=a)}}else{this.ranges||(this.ranges=[]);var f=void 0===t||l(t)&&!t.length?[i,o]:[i,o,t&&this.opts.limitToBeAddedWhitespace?s(t,this.opts.limitLinebreaksCount):t];this.ranges.push(f)}}},r.push=function(e,r,t){this.add(e,r,t)},r.current=function(){var e=this;return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=function(e,r){function t(e){return e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return null;var s;if(r){if(!t(r))throw new Error("emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n"+JSON.stringify(r,null,4)+" (type "+typeof r+")");if((s=n(n({},a),r)).progressFn&&t(s.progressFn)&&!Object.keys(s.progressFn).length)s.progressFn=null;else if(s.progressFn&&"function"!=typeof s.progressFn)throw new Error('ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "'+typeof s.progressFn+'", equal to '+JSON.stringify(s.progressFn,null,4));if(s.mergeType&&1!=+s.mergeType&&2!=+s.mergeType)throw new Error('ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "'+typeof s.mergeType+'", equal to '+JSON.stringify(s.mergeType,null,4));if("boolean"!=typeof s.joinRangesThatTouchEdges)throw new Error('ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "'+typeof s.joinRangesThatTouchEdges+'", equal to '+JSON.stringify(s.joinRangesThatTouchEdges,null,4))}else s=n({},a);var i,u,g,l=e.filter((function(e){return e})).map((function(e){return[].concat(e)})).filter((function(e){return void 0!==e[2]||e[0]!==e[1]}));if(!(i=s.progressFn?o(l,{progressFn:function(e){(g=Math.floor(e/5))!==u&&(u=g,s.progressFn(g))}}):o(l)))return null;for(var f=i.length-1,p=f;p>0;p--)s.progressFn&&(g=Math.floor(78*(1-p/f))+21)!==u&&g>u&&(u=g,s.progressFn(g)),(i[p][0]<=i[p-1][0]||!s.joinRangesThatTouchEdges&&i[p][0]<i[p-1][1]||s.joinRangesThatTouchEdges&&i[p][0]<=i[p-1][1])&&(i[p-1][0]=Math.min(i[p][0],i[p-1][0]),i[p-1][1]=Math.max(i[p][1],i[p-1][1]),void 0!==i[p][2]&&(i[p-1][0]>=i[p][0]||i[p-1][1]<=i[p][1])&&null!==i[p-1][2]&&(null===i[p][2]&&null!==i[p-1][2]?i[p-1][2]=null:null!=i[p-1][2]?2==+s.mergeType&&i[p-1][0]===i[p][0]?i[p-1][2]=i[p][2]:i[p-1][2]+=i[p][2]:i[p-1][2]=i[p][2]),i.splice(p,1),p=i.length);return i.length?i:null}(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map((function(r){return u(r[2])?[r[0],r[1],s(r[2],e.opts.limitLinebreaksCount)]:r})):this.ranges):null},r.wipe=function(){this.ranges=[]},r.replace=function(e){if(Array.isArray(e)&&e.length){if(!Array.isArray(e[0])||!g(e[0][0]))throw new Error("ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, "+JSON.stringify(e[0],null,4)+" should be an array and its first element should be an integer, a string index.");this.ranges=Array.from(e)}else this.ranges=[]},r.last=function(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null},e}(),e.defaults=f,e.version="5.0.3",Object.defineProperty(e,"__esModule",{value:!0})}));
